#!/usr/bin/env python3

#values = [0, 1, 2, 3, 4, 5, 6, 8, 14, 16, 17, 18, 19,
#20, 21, 24, 28, 32, 34, 42, 43, 47, 48, 49, 51, 52, 53, 58,
#62, 64, 65, 67, 68, 73, 75, 76, 80, 81, 84, 85, 86, 96, 101,
#102, 138, 139, 151, 160, 162, 163, 167, 169, 170, 171, 174, 175, 182, 188,
#190, 191, 200, 202, 203, 204, 226, 252, 254, 255]

values = [ 0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 14, 16, 17, 18, 21, 32, 33, 34, 35, 36,
37, 38, 39, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 64, 66, 67, 68, 69, 70,
71, 74, 78, 80, 82, 83, 84, 85, 86, 87, 90, 94, 96, 98, 99, 100, 101, 102, 103, 106,
110, 112, 114, 115, 116, 117, 118, 119, 122, 124, 126, 149, 160, 162, 165, 166, 170,
172, 174, 192, 197, 198, 199, 202, 204, 206, 224, 226, 227, 228, 229, 230, 231, 234,
236, 238]

with open("title.bin", "rb") as FILE:

	total = 0
	for y in range(0, 199):

		# Read this row
		bytedata = bytearray(FILE.read(160))

		# Beginning address of this row
		rowaddress = 0x8000 + (y * 160)

		begin = 0

		# Leading NULs
		begin = 0
		for x in range(0, 160):
			if bytedata[x] != 0:
				begin = x
				break

		# Trailing NULs
		end = 159
		for x in range(159, 0, -1):
			if bytedata[x] != 0:
				end = x
				break

		# Row token
		print('* Row ' + str(y) + ':')
		print(' FDB ' + hex(rowaddress + begin))	# Starting address
		print()
		total += 2

		# Output row data
		print('* Row ' + str(y) + ' data:')
		i = begin
		while i <= end:

			# Initial value
			value = bytedata[i]

			# Find length of run
			length = 0
			for j in range(i + 1, end + 1):
				length += 1
				if bytedata[j] != value:
					break

			value = values.index(value)
			if length < 3:

				# One-byte token
				print(' FCB ' + str(value))
				i += 1
				total += 1

			else:

				# Two-byte token
				print(' FCB $80|' + str(value) + ',' + str(length))
				i += length
				total += 2
	
		# Signal end of row
		print(' FCB 0xFF')
		total += 1
		print()

# Total memory used by tokens and data
print('* Total ' + str(total))
